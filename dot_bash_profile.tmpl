# Bash login shells
[ -f "$HOME/.profile" ] && . "$HOME/.profile"

{{ if and (eq .chezmoi.os "linux") (contains .chezmoi.hostname "viking") -}}
# Load zsh module (if available)
if command -v module >/dev/null 2>&1; then
  module load zsh/5.8-GCC-8.3.0 || true
fi

# Switch to zsh login shell once (avoid loop if already in zsh)
if [ -x "$(command -v zsh)" ] && [ -z "${ZSH_VERSION-}" ]; then
  exec zsh -l
fi
{{- end }}

# Homebrew
{{- if eq .chezmoi.os "darwin" -}}
  if [ -x /opt/homebrew/bin/brew ]; then eval "$(/opt/homebrew/bin/brew shellenv)"; fi
  if [ -x /usr/local/bin/brew ]; then eval "$(/usr/local/bin/brew shellenv)"; fi
{{- else -}}
  if [ -x "$HOME/.linuxbrew/bin/brew" ]; then eval "$("$HOME/.linuxbrew/bin/brew" shellenv)"; fi
{{- end }}

# ----------------------------
# Conda (optional & resilient)
# ----------------------------
{{- $condaEnabled := default false (get . "conda_enabled") -}}
{{- $condaPrefix := default (dict "darwin" "/opt/miniconda3" "linux" "$HOME/miniconda3") (get . "conda_prefix") -}}
{{- $hasConda := or $condaEnabled (lookPath "conda") -}}
{{- if $hasConda -}}
  {{- if eq .chezmoi.os "darwin" -}}
    if [ -f "{{ index $condaPrefix "darwin" }}/etc/profile.d/conda.sh" ]; then
      . "{{ index $condaPrefix "darwin" }}/etc/profile.d/conda.sh"
    elif [ -x "{{ index $condaPrefix "darwin" }}/bin/conda" ]; then
      eval "$("{{ index $condaPrefix "darwin" }}/bin/conda" shell.bash hook)"
    elif command -v conda >/dev/null 2>&1; then
      eval "$(conda shell.bash hook)"
    fi
  {{- else -}}
    if [ -f "{{ index $condaPrefix "linux" }}/etc/profile.d/conda.sh" ]; then
      . "{{ index $condaPrefix "linux" }}/etc/profile.d/conda.sh"
    elif [ -x "{{ index $condaPrefix "linux" }}/bin/conda" ]; then
      eval "$("{{ index $condaPrefix "linux" }}/bin/conda" shell.bash hook)"
    elif command -v conda >/dev/null 2>&1; then
      eval "$(conda shell.bash hook)"
    fi
  {{- end -}}
{{- end }}

# ----------------------------
# Cargo & SDKMAN (resilient)
# ----------------------------
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

{{- $sdkmanEnabled := default false (get . "sdkman_enabled") -}}
{{- if $sdkmanEnabled -}}
  export SDKMAN_DIR="$HOME/.sdkman"
  [ -s "$HOME/.sdkman/bin/sdkman-init.sh" ] && . "$HOME/.sdkman/bin/sdkman-init.sh"
{{- end }}

# Finally, interactive settings
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc"
