# Bash login shells
[ -f "$HOME/.profile" ] && . "$HOME/.profile"

# ----------------------------
# Homebrew (Linuxbrew) â€” only if present
# ----------------------------
{{ if eq .chezmoi.os "darwin" -}}
  # macOS: brew is set in zprofile usually, but safe to eval if present
  if [ -x /opt/homebrew/bin/brew ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
  elif [ -x /usr/local/bin/brew ]; then
    eval "$(/usr/local/bin/brew shellenv)"
  fi
{{ else -}}
  # Linux: user-local Linuxbrew (if present)
  if [ -x "$HOME/.linuxbrew/bin/brew" ]; then
    eval "$("$HOME/.linuxbrew/bin/brew" shellenv)"
  fi
{{ end }}

# ----------------------------
# Conda (optional & resilient)
# ----------------------------
# Try well-known install roots first, then fall back to "conda shell.bash hook" if on PATH
if [ -f "/opt/apps/eb/software/Miniconda3/23.5.2-0/etc/profile.d/conda.sh" ]; then
  . "/opt/apps/eb/software/Miniconda3/23.5.2-0/etc/profile.d/conda.sh"
elif [ -x "/opt/apps/eb/software/Miniconda3/23.5.2-0/bin/conda" ]; then
  eval "$("/opt/apps/eb/software/Miniconda3/23.5.2-0/bin/conda" shell.bash hook)"
elif command -v conda >/dev/null 2>&1; then
  eval "$(conda shell.bash hook)"
fi

# ----------------------------
# Viking HPC: load zsh via module and switch to zsh (login shell)
# ----------------------------
if [ "$(uname -s)" = "Linux" ]; then
  host_lc="$(hostname 2>/dev/null | tr '[:upper:]' '[:lower:]')"
  if [[ "$host_lc" == *viking* ]]; then
    # Initialise environment modules (Lmod/Modules)
    for f in /etc/profile.d/lmod.sh /etc/profile.d/modules.sh /usr/share/Modules/init/bash; do
      [ -f "$f" ] && . "$f"
    done
    # Load zsh module, then exec into zsh once
    if command -v module >/dev/null 2>&1; then
      module load zsh/5.8-GCC-8.3.0 || true
    fi
    if command -v zsh >/dev/null 2>&1 && [ -z "${ZSH_VERSION-}" ]; then
      exec zsh -l
    fi
  fi
fi

# ----------------------------
# Cargo & SDKMAN (resilient)
# ----------------------------
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

# SDKMAN (optional)
export SDKMAN_DIR="$HOME/.sdkman"
[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ] && . "$HOME/.sdkman/bin/sdkman-init.sh"

# ----------------------------
# Finally, interactive settings
# ----------------------------
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc"
