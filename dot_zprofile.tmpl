# ~/.zprofile — login shell setup (macOS/Linux)

# ---- Viking HPC: ensure modules exist and load Neovim (runtime detection) ----
if [ "$(uname -s)" = "Linux" ]; then
  host_lc="$(hostname 2>/dev/null | tr '[:upper:]' '[:lower:]')"
  if [[ "$host_lc" == *viking* ]]; then
    # Initialize modules (Lmod / Environment Modules)
    for f in \
      /etc/profile.d/lmod.sh \
      /etc/profile.d/modules.sh \
      /usr/share/Modules/init/zsh \
      /usr/share/Modules/init/profile.zsh \
      /usr/share/lmod/lmod/init/zsh \
      /usr/share/lmod/lmod/init/profile; do
      [ -f "$f" ] && . "$f"
    done

    if command -v module >/dev/null 2>&1; then
      # Only load if that exact Neovim is available
      if module -t avail 2>&1 | grep -qE '^Neovim/0\.11\.4'; then
        module load Neovim/0.11.4-GCCcore-13.2.0 >/dev/null 2>&1 || true
        hash -r   # refresh zsh’s command cache so 'nvim' is picked up
      fi
    fi
  fi
fi

# ---- Homebrew env (macOS + Linuxbrew if present) ----
{{ if eq .chezmoi.os "darwin" }}
if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -x /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
fi
{{ else }}
if [ -x "$HOME/.linuxbrew/bin/brew" ]; then
  eval "$("$HOME/.linuxbrew/bin/brew" shellenv)"
fi
{{ end }}

# ---- Conda (optional & resilient) ----
# Try common locations first, then fall back to whatever "conda" is on PATH.
if [ -f "/opt/apps/eb/software/Miniconda3/23.5.2-0/etc/profile.d/conda.sh" ]; then
  . "/opt/apps/eb/software/Miniconda3/23.5.2-0/etc/profile.d/conda.sh"
elif [ -x "/opt/apps/eb/software/Miniconda3/23.5.2-0/bin/conda" ]; then
  eval "$("/opt/apps/eb/software/Miniconda3/23.5.2-0/bin/conda" shell.zsh hook)"
elif [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
  . "$HOME/miniconda3/etc/profile.d/conda.sh"
elif [ -x "$HOME/miniconda3/bin/conda" ]; then
  eval "$("$HOME/miniconda3/bin/conda" shell.zsh hook)"
elif command -v conda >/dev/null 2>&1; then
  eval "$(conda shell.zsh hook)"
fi

# ---- Prompt & navigation (safe if missing) ----
command -v zoxide  >/dev/null 2>&1 && eval "$(zoxide init zsh)"
command -v starship >/dev/null 2>&1 && eval "$(starship init zsh)"

# ---- Ensure interactive settings load too ----
[[ -o interactive ]] && [ -f "$HOME/.zshrc" ] && . "$HOME/.zshrc"
