# ~/.zprofile â€” login shell setup (macOS/Linux)

# Viking HPC: ensure modules exist and load Neovim
if [ "$(uname -s)" = "Linux" ]; then
  host_lc="$(hostname 2>/dev/null | tr '[:upper:]' '[:lower:]')"
  if [[ "$host_lc" == *viking* ]]; then
    for f in /etc/profile.d/lmod.sh /etc/profile.d/modules.sh /usr/share/Modules/init/zsh; do
      [ -f "$f" ] && . "$f"
    done
    if command -v module >/dev/null 2>&1 && ! command -v nvim >/dev/null 2>&1; then
      module load Neovim/0.11.4-GCCcore-13.2.0 || true
    fi
  fi
fi

# Homebrew (macOS & Linux user-local)
{{- if eq .chezmoi.os "darwin" -}}
  if [ -x /opt/homebrew/bin/brew ]; then eval "$(/opt/homebrew/bin/brew shellenv)"; fi
  if [ -x /usr/local/bin/brew ];  then eval "$(/usr/local/bin/brew shellenv)";  fi
{{- else -}}
  if [ -x "$HOME/.linuxbrew/bin/brew" ]; then eval "$("$HOME/.linuxbrew/bin/brew" shellenv)"; fi
{{- end }}

# Conda (optional & resilient)
{{- $condaEnabled := default false (get . "conda_enabled") -}}
{{- $condaPrefix  := default (dict "darwin" "/opt/miniconda3" "linux" (printf "%s/miniconda3" .chezmoi.homeDir)) (get . "conda_prefix") -}}
{{- $hasConda     := or $condaEnabled (lookPath "conda") -}}
{{- if $hasConda -}}
  {{- if eq .chezmoi.os "darwin" -}}
    if [ -f "{{ index $condaPrefix "darwin" }}/etc/profile.d/conda.sh" ]; then
      . "{{ index $condaPrefix "darwin" }}/etc/profile.d/conda.sh"
    elif [ -x "{{ index $condaPrefix "darwin" }}/bin/conda" ]; then
      eval "$("{{ index $condaPrefix "darwin" }}/bin/conda" shell.zsh hook)"
    elif command -v conda >/dev/null 2>&1; then
      eval "$(conda shell.zsh hook)"
    fi
  {{- else -}}
    if [ -f "{{ index $condaPrefix "linux" }}/etc/profile.d/conda.sh" ]; then
      . "{{ index $condaPrefix "linux" }}/etc/profile.d/conda.sh"
    elif [ -x "{{ index $condaPrefix "linux" }}/bin/conda" ]; then
      eval "$("{{ index $condaPrefix "linux" }}/bin/conda" shell.zsh hook)"
    elif command -v conda >/dev/null 2>&1; then
      eval "$(conda shell.zsh hook)"
    fi
  {{- end -}}
{{- end }}

# Ensure interactive settings load too
[[ -o interactive ]] && [ -f "$HOME/.zshrc" ] && source "$HOME/.zshrc"
