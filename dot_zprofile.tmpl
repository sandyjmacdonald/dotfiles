# ~/.zprofile  (login shells; platform setup)

# Homebrew
{{ if eq .chezmoi.os "darwin" -}}
  if [ -x /opt/homebrew/bin/brew ]; then eval "$(/opt/homebrew/bin/brew shellenv)"; fi
  if [ -x /usr/local/bin/brew ];  then eval "$(/usr/local/bin/brew shellenv)";  fi
{{- else -}}
  if [ -x "$HOME/.linuxbrew/bin/brew" ]; then eval "$("$HOME/.linuxbrew/bin/brew" shellenv)"; fi
{{- end }}

# Conda (optional; safe if absent)
{{- if .conda_enabled | default true -}}
  {{ if eq .chezmoi.os "darwin" -}}
    if [ -f "{{ (index .conda_prefix "darwin") }}/etc/profile.d/conda.sh" ]; then
      . "{{ (index .conda_prefix "darwin") }}/etc/profile.d/conda.sh"
    elif [ -x "{{ (index .conda_prefix "darwin") }}/bin/conda" ]; then
      eval "$("{{ (index .conda_prefix "darwin") }}/bin/conda" shell.zsh hook)"
    fi
  {{ else -}}
    if [ -f "{{ (index .conda_prefix "linux") }}/etc/profile.d/conda.sh" ]; then
      . "{{ (index .conda_prefix "linux") }}/etc/profile.d/conda.sh"
    elif [ -x "{{ (index .conda_prefix "linux") }}/bin/conda" ]; then
      eval "$("{{ (index .conda_prefix "linux") }}/bin/conda" shell.zsh hook)"
    fi
  {{ end -}}
{{- end }}

# Cargo & SDKMAN (safe if missing)
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"
{{- if .sdkman_enabled | default true -}}
  export SDKMAN_DIR="$HOME/.sdkman"
  [ -s "$HOME/.sdkman/bin/sdkman-init.sh" ] && . "$HOME/.sdkman/bin/sdkman-init.sh"
{{- end }}

# (Optional) Linux cluster modules & HPC env
{{ if eq .chezmoi.os "linux" -}}
  {{- range .modules.load | default (list) }}
  command -v module >/dev/null 2>&1 && module load {{ . }}
  {{- end }}
  {{- with .hpc }}
  export NXF_HOME="{{ .NXF_HOME }}"
  export NXF_CONDA_CACHEDIR="{{ .NXF_CONDA_CACHEDIR }}"
  export NXF_TEMP="{{ .NXF_TEMP }}"
  export NXF_APPTAINER_CACHEDIR="{{ .NXF_APPTAINER_CACHEDIR }}"
  export NXF_SINGULARITY_CACHEDIR="{{ .NXF_SINGULARITY_CACHEDIR }}"
  export APPTAINER_TMPDIR="{{ .APPTAINER_TMPDIR }}"
  export APPTAINER_CACHEDIR="{{ .APPTAINER_CACHEDIR }}"
  export USER_ACCOUNT="{{ .USER_ACCOUNT }}"
  {{- end }}
{{- end }}
